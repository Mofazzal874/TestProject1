// Generated by view binder compiler. Do not edit!
package com.example.testproject1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testproject1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final EditText addressValue;

  @NonNull
  public final TextView birthDate;

  @NonNull
  public final EditText birthDateValue;

  @NonNull
  public final TextView bloodGroup;

  @NonNull
  public final EditText bloodGroupValue;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final Button editProfile;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView password;

  @NonNull
  public final EditText passwordValue;

  @NonNull
  public final TextView phone;

  @NonNull
  public final EditText phoneValue;

  @NonNull
  public final TextView profileEmail;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final TextView profileName;

  @NonNull
  public final TextView userName;

  @NonNull
  public final EditText userNameValue;

  private ActivityEditProfileBinding(@NonNull ConstraintLayout rootView, @NonNull TextView address,
      @NonNull EditText addressValue, @NonNull TextView birthDate, @NonNull EditText birthDateValue,
      @NonNull TextView bloodGroup, @NonNull EditText bloodGroupValue,
      @NonNull ConstraintLayout constraintLayout3, @NonNull Button editProfile,
      @NonNull ImageView imageView2, @NonNull LinearLayout linearLayout, @NonNull TextView password,
      @NonNull EditText passwordValue, @NonNull TextView phone, @NonNull EditText phoneValue,
      @NonNull TextView profileEmail, @NonNull ImageView profileImage,
      @NonNull TextView profileName, @NonNull TextView userName, @NonNull EditText userNameValue) {
    this.rootView = rootView;
    this.address = address;
    this.addressValue = addressValue;
    this.birthDate = birthDate;
    this.birthDateValue = birthDateValue;
    this.bloodGroup = bloodGroup;
    this.bloodGroupValue = bloodGroupValue;
    this.constraintLayout3 = constraintLayout3;
    this.editProfile = editProfile;
    this.imageView2 = imageView2;
    this.linearLayout = linearLayout;
    this.password = password;
    this.passwordValue = passwordValue;
    this.phone = phone;
    this.phoneValue = phoneValue;
    this.profileEmail = profileEmail;
    this.profileImage = profileImage;
    this.profileName = profileName;
    this.userName = userName;
    this.userNameValue = userNameValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.address_value;
      EditText addressValue = ViewBindings.findChildViewById(rootView, id);
      if (addressValue == null) {
        break missingId;
      }

      id = R.id.birthDate;
      TextView birthDate = ViewBindings.findChildViewById(rootView, id);
      if (birthDate == null) {
        break missingId;
      }

      id = R.id.birthDateValue;
      EditText birthDateValue = ViewBindings.findChildViewById(rootView, id);
      if (birthDateValue == null) {
        break missingId;
      }

      id = R.id.blood_group;
      TextView bloodGroup = ViewBindings.findChildViewById(rootView, id);
      if (bloodGroup == null) {
        break missingId;
      }

      id = R.id.blood_group_value;
      EditText bloodGroupValue = ViewBindings.findChildViewById(rootView, id);
      if (bloodGroupValue == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.edit_profile;
      Button editProfile = ViewBindings.findChildViewById(rootView, id);
      if (editProfile == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.password;
      TextView password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.passwordValue;
      EditText passwordValue = ViewBindings.findChildViewById(rootView, id);
      if (passwordValue == null) {
        break missingId;
      }

      id = R.id.phone;
      TextView phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.phoneValue;
      EditText phoneValue = ViewBindings.findChildViewById(rootView, id);
      if (phoneValue == null) {
        break missingId;
      }

      id = R.id.profile_email;
      TextView profileEmail = ViewBindings.findChildViewById(rootView, id);
      if (profileEmail == null) {
        break missingId;
      }

      id = R.id.profile_image;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profile_name;
      TextView profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      id = R.id.userNameValue;
      EditText userNameValue = ViewBindings.findChildViewById(rootView, id);
      if (userNameValue == null) {
        break missingId;
      }

      return new ActivityEditProfileBinding((ConstraintLayout) rootView, address, addressValue,
          birthDate, birthDateValue, bloodGroup, bloodGroupValue, constraintLayout3, editProfile,
          imageView2, linearLayout, password, passwordValue, phone, phoneValue, profileEmail,
          profileImage, profileName, userName, userNameValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
