// Generated by view binder compiler. Do not edit!
package com.example.testproject1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testproject1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FeaturedDesignBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView featuredDescription;

  @NonNull
  public final ImageView featuredImage;

  @NonNull
  public final RatingBar featuredRating;

  @NonNull
  public final TextView featuredTitle;

  private FeaturedDesignBinding(@NonNull CardView rootView, @NonNull TextView featuredDescription,
      @NonNull ImageView featuredImage, @NonNull RatingBar featuredRating,
      @NonNull TextView featuredTitle) {
    this.rootView = rootView;
    this.featuredDescription = featuredDescription;
    this.featuredImage = featuredImage;
    this.featuredRating = featuredRating;
    this.featuredTitle = featuredTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FeaturedDesignBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeaturedDesignBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.featured_design, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeaturedDesignBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.featured_description;
      TextView featuredDescription = ViewBindings.findChildViewById(rootView, id);
      if (featuredDescription == null) {
        break missingId;
      }

      id = R.id.featured_image;
      ImageView featuredImage = ViewBindings.findChildViewById(rootView, id);
      if (featuredImage == null) {
        break missingId;
      }

      id = R.id.featured_rating;
      RatingBar featuredRating = ViewBindings.findChildViewById(rootView, id);
      if (featuredRating == null) {
        break missingId;
      }

      id = R.id.featured_title;
      TextView featuredTitle = ViewBindings.findChildViewById(rootView, id);
      if (featuredTitle == null) {
        break missingId;
      }

      return new FeaturedDesignBinding((CardView) rootView, featuredDescription, featuredImage,
          featuredRating, featuredTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
