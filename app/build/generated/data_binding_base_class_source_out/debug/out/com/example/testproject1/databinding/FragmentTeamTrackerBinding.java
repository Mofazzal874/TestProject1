// Generated by view binder compiler. Do not edit!
package com.example.testproject1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testproject1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTeamTrackerBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final RecyclerView recyclerViewTeamMembers;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final LinearLayout searchLayout;

  @NonNull
  public final EditText searchView;

  @NonNull
  public final Toolbar toolbar;

  private FragmentTeamTrackerBinding(@NonNull CoordinatorLayout rootView,
      @NonNull RecyclerView recyclerViewTeamMembers, @NonNull Button searchButton,
      @NonNull LinearLayout searchLayout, @NonNull EditText searchView, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.recyclerViewTeamMembers = recyclerViewTeamMembers;
    this.searchButton = searchButton;
    this.searchLayout = searchLayout;
    this.searchView = searchView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTeamTrackerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTeamTrackerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_team_tracker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTeamTrackerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerViewTeamMembers;
      RecyclerView recyclerViewTeamMembers = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTeamMembers == null) {
        break missingId;
      }

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.searchLayout;
      LinearLayout searchLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchLayout == null) {
        break missingId;
      }

      id = R.id.searchView;
      EditText searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentTeamTrackerBinding((CoordinatorLayout) rootView, recyclerViewTeamMembers,
          searchButton, searchLayout, searchView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
