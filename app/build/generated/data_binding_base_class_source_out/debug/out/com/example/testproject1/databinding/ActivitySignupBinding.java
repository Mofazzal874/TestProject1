// Generated by view binder compiler. Do not edit!
package com.example.testproject1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testproject1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView ORsignIn;

  @NonNull
  public final LinearLayout bottomLinearLayout;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final EditText regBloodGroup;

  @NonNull
  public final Button regBtn;

  @NonNull
  public final EditText regDateOfBirth;

  @NonNull
  public final EditText regEmail;

  @NonNull
  public final EditText regName;

  @NonNull
  public final EditText regPassword;

  @NonNull
  public final EditText regPhone;

  @NonNull
  public final EditText regUsername;

  @NonNull
  public final TextView textView;

  @NonNull
  public final LinearLayout topLinearLayout;

  private ActivitySignupBinding(@NonNull ConstraintLayout rootView, @NonNull TextView ORsignIn,
      @NonNull LinearLayout bottomLinearLayout, @NonNull CardView cardView,
      @NonNull CardView cardView1, @NonNull EditText regBloodGroup, @NonNull Button regBtn,
      @NonNull EditText regDateOfBirth, @NonNull EditText regEmail, @NonNull EditText regName,
      @NonNull EditText regPassword, @NonNull EditText regPhone, @NonNull EditText regUsername,
      @NonNull TextView textView, @NonNull LinearLayout topLinearLayout) {
    this.rootView = rootView;
    this.ORsignIn = ORsignIn;
    this.bottomLinearLayout = bottomLinearLayout;
    this.cardView = cardView;
    this.cardView1 = cardView1;
    this.regBloodGroup = regBloodGroup;
    this.regBtn = regBtn;
    this.regDateOfBirth = regDateOfBirth;
    this.regEmail = regEmail;
    this.regName = regName;
    this.regPassword = regPassword;
    this.regPhone = regPhone;
    this.regUsername = regUsername;
    this.textView = textView;
    this.topLinearLayout = topLinearLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ORsignIn;
      TextView ORsignIn = ViewBindings.findChildViewById(rootView, id);
      if (ORsignIn == null) {
        break missingId;
      }

      id = R.id.bottomLinearLayout;
      LinearLayout bottomLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomLinearLayout == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView1;
      CardView cardView1 = ViewBindings.findChildViewById(rootView, id);
      if (cardView1 == null) {
        break missingId;
      }

      id = R.id.reg_bloodGroup;
      EditText regBloodGroup = ViewBindings.findChildViewById(rootView, id);
      if (regBloodGroup == null) {
        break missingId;
      }

      id = R.id.reg_btn;
      Button regBtn = ViewBindings.findChildViewById(rootView, id);
      if (regBtn == null) {
        break missingId;
      }

      id = R.id.reg_dateOfBirth;
      EditText regDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (regDateOfBirth == null) {
        break missingId;
      }

      id = R.id.reg_email;
      EditText regEmail = ViewBindings.findChildViewById(rootView, id);
      if (regEmail == null) {
        break missingId;
      }

      id = R.id.reg_name;
      EditText regName = ViewBindings.findChildViewById(rootView, id);
      if (regName == null) {
        break missingId;
      }

      id = R.id.reg_password;
      EditText regPassword = ViewBindings.findChildViewById(rootView, id);
      if (regPassword == null) {
        break missingId;
      }

      id = R.id.reg_phone;
      EditText regPhone = ViewBindings.findChildViewById(rootView, id);
      if (regPhone == null) {
        break missingId;
      }

      id = R.id.reg_username;
      EditText regUsername = ViewBindings.findChildViewById(rootView, id);
      if (regUsername == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.topLinearLayout;
      LinearLayout topLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLinearLayout == null) {
        break missingId;
      }

      return new ActivitySignupBinding((ConstraintLayout) rootView, ORsignIn, bottomLinearLayout,
          cardView, cardView1, regBloodGroup, regBtn, regDateOfBirth, regEmail, regName,
          regPassword, regPhone, regUsername, textView, topLinearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
