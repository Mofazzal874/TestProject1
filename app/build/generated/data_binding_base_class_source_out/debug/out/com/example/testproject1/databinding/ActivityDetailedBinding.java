// Generated by view binder compiler. Do not edit!
package com.example.testproject1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testproject1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailedBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView detailedAddress;

  @NonNull
  public final ImageView detailedBackImageButton;

  @NonNull
  public final TextView detailedDescription;

  @NonNull
  public final TextView detailedHotel;

  @NonNull
  public final ImageView detailedImage;

  @NonNull
  public final TextView detailedLocation;

  @NonNull
  public final TextView detailedRate;

  @NonNull
  public final TextView detailedTitle;

  @NonNull
  public final TextView detailedTourGuide;

  @NonNull
  public final Button detailedUploadReviewButton;

  @NonNull
  public final ImageView detailedWishlistImageButton;

  @NonNull
  public final ImageView imageView8;

  private ActivityDetailedBinding(@NonNull LinearLayout rootView, @NonNull TextView detailedAddress,
      @NonNull ImageView detailedBackImageButton, @NonNull TextView detailedDescription,
      @NonNull TextView detailedHotel, @NonNull ImageView detailedImage,
      @NonNull TextView detailedLocation, @NonNull TextView detailedRate,
      @NonNull TextView detailedTitle, @NonNull TextView detailedTourGuide,
      @NonNull Button detailedUploadReviewButton, @NonNull ImageView detailedWishlistImageButton,
      @NonNull ImageView imageView8) {
    this.rootView = rootView;
    this.detailedAddress = detailedAddress;
    this.detailedBackImageButton = detailedBackImageButton;
    this.detailedDescription = detailedDescription;
    this.detailedHotel = detailedHotel;
    this.detailedImage = detailedImage;
    this.detailedLocation = detailedLocation;
    this.detailedRate = detailedRate;
    this.detailedTitle = detailedTitle;
    this.detailedTourGuide = detailedTourGuide;
    this.detailedUploadReviewButton = detailedUploadReviewButton;
    this.detailedWishlistImageButton = detailedWishlistImageButton;
    this.imageView8 = imageView8;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detailed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detailed_address;
      TextView detailedAddress = ViewBindings.findChildViewById(rootView, id);
      if (detailedAddress == null) {
        break missingId;
      }

      id = R.id.detailed_back_image_button;
      ImageView detailedBackImageButton = ViewBindings.findChildViewById(rootView, id);
      if (detailedBackImageButton == null) {
        break missingId;
      }

      id = R.id.detailed_description;
      TextView detailedDescription = ViewBindings.findChildViewById(rootView, id);
      if (detailedDescription == null) {
        break missingId;
      }

      id = R.id.detailed_hotel;
      TextView detailedHotel = ViewBindings.findChildViewById(rootView, id);
      if (detailedHotel == null) {
        break missingId;
      }

      id = R.id.detailed_image;
      ImageView detailedImage = ViewBindings.findChildViewById(rootView, id);
      if (detailedImage == null) {
        break missingId;
      }

      id = R.id.detailed_location;
      TextView detailedLocation = ViewBindings.findChildViewById(rootView, id);
      if (detailedLocation == null) {
        break missingId;
      }

      id = R.id.detailed_rate;
      TextView detailedRate = ViewBindings.findChildViewById(rootView, id);
      if (detailedRate == null) {
        break missingId;
      }

      id = R.id.detailed_title;
      TextView detailedTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailedTitle == null) {
        break missingId;
      }

      id = R.id.detailed_tour_guide;
      TextView detailedTourGuide = ViewBindings.findChildViewById(rootView, id);
      if (detailedTourGuide == null) {
        break missingId;
      }

      id = R.id.detailed_upload_review_button;
      Button detailedUploadReviewButton = ViewBindings.findChildViewById(rootView, id);
      if (detailedUploadReviewButton == null) {
        break missingId;
      }

      id = R.id.detailed_wishlist_image_button;
      ImageView detailedWishlistImageButton = ViewBindings.findChildViewById(rootView, id);
      if (detailedWishlistImageButton == null) {
        break missingId;
      }

      id = R.id.imageView8;
      ImageView imageView8 = ViewBindings.findChildViewById(rootView, id);
      if (imageView8 == null) {
        break missingId;
      }

      return new ActivityDetailedBinding((LinearLayout) rootView, detailedAddress,
          detailedBackImageButton, detailedDescription, detailedHotel, detailedImage,
          detailedLocation, detailedRate, detailedTitle, detailedTourGuide,
          detailedUploadReviewButton, detailedWishlistImageButton, imageView8);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
