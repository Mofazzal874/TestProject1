// Generated by view binder compiler. Do not edit!
package com.example.testproject1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testproject1.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddPlaceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText addPlaceAddress;

  @NonNull
  public final Button addPlaceButton;

  @NonNull
  public final EditText addPlaceDescription;

  @NonNull
  public final Spinner addPlaceDivision;

  @NonNull
  public final EditText addPlaceEmail;

  @NonNull
  public final ShapeableImageView addPlaceImage;

  @NonNull
  public final EditText addPlaceLocation;

  @NonNull
  public final EditText addPlaceName;

  @NonNull
  public final EditText addPlacePhone;

  @NonNull
  public final TextView addPlaceUploadImage;

  @NonNull
  public final EditText addPlaceWebsite;

  @NonNull
  public final Spinner placeTypeSpinner;

  private ActivityAddPlaceBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText addPlaceAddress, @NonNull Button addPlaceButton,
      @NonNull EditText addPlaceDescription, @NonNull Spinner addPlaceDivision,
      @NonNull EditText addPlaceEmail, @NonNull ShapeableImageView addPlaceImage,
      @NonNull EditText addPlaceLocation, @NonNull EditText addPlaceName,
      @NonNull EditText addPlacePhone, @NonNull TextView addPlaceUploadImage,
      @NonNull EditText addPlaceWebsite, @NonNull Spinner placeTypeSpinner) {
    this.rootView = rootView;
    this.addPlaceAddress = addPlaceAddress;
    this.addPlaceButton = addPlaceButton;
    this.addPlaceDescription = addPlaceDescription;
    this.addPlaceDivision = addPlaceDivision;
    this.addPlaceEmail = addPlaceEmail;
    this.addPlaceImage = addPlaceImage;
    this.addPlaceLocation = addPlaceLocation;
    this.addPlaceName = addPlaceName;
    this.addPlacePhone = addPlacePhone;
    this.addPlaceUploadImage = addPlaceUploadImage;
    this.addPlaceWebsite = addPlaceWebsite;
    this.placeTypeSpinner = placeTypeSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddPlaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddPlaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_place, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddPlaceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_place_address;
      EditText addPlaceAddress = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceAddress == null) {
        break missingId;
      }

      id = R.id.add_place_button;
      Button addPlaceButton = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceButton == null) {
        break missingId;
      }

      id = R.id.add_place_description;
      EditText addPlaceDescription = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceDescription == null) {
        break missingId;
      }

      id = R.id.add_place_division;
      Spinner addPlaceDivision = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceDivision == null) {
        break missingId;
      }

      id = R.id.add_place_email;
      EditText addPlaceEmail = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceEmail == null) {
        break missingId;
      }

      id = R.id.add_place_image;
      ShapeableImageView addPlaceImage = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceImage == null) {
        break missingId;
      }

      id = R.id.add_place_location;
      EditText addPlaceLocation = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceLocation == null) {
        break missingId;
      }

      id = R.id.add_place_name;
      EditText addPlaceName = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceName == null) {
        break missingId;
      }

      id = R.id.add_place_phone;
      EditText addPlacePhone = ViewBindings.findChildViewById(rootView, id);
      if (addPlacePhone == null) {
        break missingId;
      }

      id = R.id.add_place_upload_image;
      TextView addPlaceUploadImage = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceUploadImage == null) {
        break missingId;
      }

      id = R.id.add_place_website;
      EditText addPlaceWebsite = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceWebsite == null) {
        break missingId;
      }

      id = R.id.place_type_spinner;
      Spinner placeTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (placeTypeSpinner == null) {
        break missingId;
      }

      return new ActivityAddPlaceBinding((ConstraintLayout) rootView, addPlaceAddress,
          addPlaceButton, addPlaceDescription, addPlaceDivision, addPlaceEmail, addPlaceImage,
          addPlaceLocation, addPlaceName, addPlacePhone, addPlaceUploadImage, addPlaceWebsite,
          placeTypeSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
